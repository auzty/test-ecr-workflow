name: Test Pull Private ECR

env:
  REPOSITORY: yusuf-aws
  ECR_IMAGE: jwilder/whoami

on:
  workflow_dispatch:
    inputs:
      TTL_MINUTES:
        description: 'Time for instance to live (minutes)'
        required: true
        default: '30'
        type: number

jobs:
  setting-up-private-ecr:
    runs-on: ubuntu-latest
    outputs:
      fullimageoutput: ${{ steps.fullimageformat.outputs.fullimage }}
      usernameoutput: ${{ steps.awscredsoutput.outputs.ECR_USER }}
      passwdoutput: ${{ steps.awscredsoutput.outputs.ECR_PWD }}
    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: elgohr/ecr-login-action@v3
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
      - name: set the env output
        id: awscredsoutput
        run: |
          echo "ECR_PWD=${{ steps.login-ecr.outputs.password}}" >> $GITHUB_OUTPUT
          echo "ECR_USER=${{ steps.login-ecr.outputs.username}}" >> $GITHUB_OUTPUT
      - name: set image full format
        id: fullimageformat
        run: |
          echo "fullimage=${{ steps.login-ecr.outputs.registry}}/$REPOSITORY:latest" >> $GITHUB_OUTPUT
      - name: test
        run: echo ${{ steps.login-ecr.outputs.password }}

  define-service:
    runs-on: ubuntu-latest
    needs: setting-up-private-ecr
    services:
      test-whoami:
        image: ${{ needs.setting-up-private-ecr.outputs.fullimageoutput }}
        credentials:
          username: ${{ needs.setting-up-private-ecr.outputs.usernameoutput }} 
          password: ${{ needs.setting-up-private-ecr.outputs.passwdoutput }}
        ports:
           - 3000:8000
    steps:
      - name: Get container service hostname using curl
        run: curl http://localhost:3000/
