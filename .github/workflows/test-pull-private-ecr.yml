name: Test Pull Private ECR

env:
  REPOSITORY: yusuf-aws
  ECR_IMAGE: jwilder/whoami

on:
  workflow_dispatch:
    inputs:
      TTL_MINUTES:
        description: 'Time for instance to live (minutes)'
        required: true
        default: '30'
        type: number

jobs:
  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          mask-aws-account-id: 'false'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: test debugging
        run: |
          echo u "${{ steps.login-ecr.outputs.docker_username_075324509106_dkr_ecr_ap_southeast_1_amazonaws_com }}"
          echo p "${{ steps.login-ecr.outputs.docker_password_075324509106_dkr_ecr_ap_southeast_1_amazonaws_com }}"
      
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }} 
      docker_username: ${{ steps.login-ecr.outputs.docker_username_075324509106_dkr_ecr_ap_southeast_1_amazonaws_com }}
      docker_password: ${{ steps.login-ecr.outputs.docker_password_075324509106_dkr_ecr_ap_southeast_1_amazonaws_com }}

  define-service:
    runs-on: ubuntu-latest
    needs: login-to-amazon-ecr
    services:
      test-whoami:
        image: ${{ needs.login-to-amazon-ecr.outputs.registry }}/yusuf-aws:latest
        credentials:
          075324509106.dkr.ecr.ap-southeast-1.amazonaws.com
          username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
          password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
        ports:
           - 3000:8000
    steps:
      - name: Get container service hostname using curl
        run: curl http://localhost:3000/
